# Generated by Django 5.2.4 on 2025-09-20 21:30

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import testimonials.utils
import testimonials.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TestimonialCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=120, unique=True, verbose_name="Slug"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Is active"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, default=0, verbose_name="Order"
                    ),
                ),
            ],
            options={
                "verbose_name": "Testimonial Category",
                "verbose_name_plural": "Testimonial Categories",
                "ordering": ["order", "name"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "order"],
                        name="testimonial_is_acti_bef2c4_idx",
                    ),
                    models.Index(fields=["name"], name="testimonial_name_ec3791_idx"),
                    models.Index(fields=["slug"], name="testimonial_slug_0a0a7b_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Testimonial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "author_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        verbose_name="Author Name",
                    ),
                ),
                (
                    "author_email",
                    models.EmailField(
                        blank=True,
                        db_index=True,
                        max_length=254,
                        verbose_name="Author Email",
                    ),
                ),
                (
                    "author_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        region=None,
                        verbose_name="Author Phone",
                    ),
                ),
                (
                    "author_title",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Author Title"
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        verbose_name="Company",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Location"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=testimonials.utils.generate_upload_path,
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, verbose_name="Title"
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        validators=[
                            testimonials.validators.validate_testimonial_content
                        ],
                        verbose_name="Content",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                            testimonials.validators.validate_rating,
                        ],
                        verbose_name="Rating",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("website", "Website"),
                            ("mobile_app", "Mobile App"),
                            ("email", "Email"),
                            ("third_party", "Third Party"),
                            ("social_media", "Social Media"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        default="website",
                        max_length=30,
                        verbose_name="Source",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("featured", "Featured"),
                            ("archived", "Archived"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Is Anonymous"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Is Verified"
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        db_index=True, default=0, verbose_name="Display Order"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "social_media",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Social Media"
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="Approved At"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rejection Reason"),
                ),
                ("response", models.TextField(blank=True, verbose_name="Response")),
                (
                    "response_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Response At"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Extra Data"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_testimonials",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="testimonials",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "response_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="testimonial_responses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Response By",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="testimonials",
                        to="testimonials.testimonialcategory",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Testimonial",
                "verbose_name_plural": "Testimonials",
                "ordering": ["-display_order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TestimonialMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=testimonials.utils.generate_upload_path,
                        verbose_name="File",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Media Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=255, verbose_name="Title"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="Is Primary"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, default=0, verbose_name="Order"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Extra Data"
                    ),
                ),
                (
                    "testimonial",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="testimonials.testimonial",
                        verbose_name="Testimonial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Testimonial Media",
                "verbose_name_plural": "Testimonial Media",
                "ordering": ["-is_primary", "order", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(fields=["status"], name="testimonial_status_c6beca_idx"),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(fields=["rating"], name="testimonial_rating_c196fb_idx"),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["author_name"], name="testimonial_author__3e7554_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["created_at"], name="testimonial_created_f9dacc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["approved_at"], name="testimonial_approve_81209c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["display_order"], name="testimonial_display_a74a5a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["is_anonymous"], name="testimonial_is_anon_24a3ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["is_verified"], name="testimonial_is_veri_a59c61_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["status", "created_at"], name="testimonial_status_a11574_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["status", "rating"], name="testimonial_status_947f08_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["status", "display_order"], name="testimonial_status_eee89a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["category", "status"], name="testimonial_categor_f29720_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["author", "status"], name="testimonial_author__689f6a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["rating", "created_at"], name="testimonial_rating_de5606_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonial",
            index=models.Index(
                fields=["is_verified", "status"], name="testimonial_is_veri_c3220b_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="testimonial",
            constraint=models.CheckConstraint(
                condition=models.Q(("rating__gte", 1), ("rating__lte", 5)),
                name="testimonial_rating_range",
            ),
        ),
        migrations.AddConstraint(
            model_name="testimonial",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("is_anonymous", True),
                    ("author_name", ""),
                    ("author_email", ""),
                    _negated=True,
                ),
                name="testimonial_author_info_required",
            ),
        ),
        migrations.AddIndex(
            model_name="testimonialmedia",
            index=models.Index(
                fields=["testimonial", "is_primary"],
                name="testimonial_testimo_183b0d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="testimonialmedia",
            index=models.Index(
                fields=["media_type"], name="testimonial_media_t_ca1e9e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonialmedia",
            index=models.Index(
                fields=["is_primary", "order"], name="testimonial_is_prim_d29134_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testimonialmedia",
            index=models.Index(
                fields=["testimonial", "media_type"],
                name="testimonial_testimo_7043a1_idx",
            ),
        ),
    ]
